import { ColourScapes } from './formatTypes/coloursSpace.type';
import { ChannelTypes } from './formats.type';

export interface IOptions {
  isExtend: boolean;
  leftExtend: number;
  rightExtend: number;
  topExtend: number;
  bottomExtend: number;
  isExtendColor: boolean;
  extendColor: string;
  isExtract: boolean;
  leftExtract: number;
  topExtract: number;
  widthExtract: number;
  heightExtract: number;
  rotate: number;
  rotateBg: string;
  isFlip: boolean;
  isFlop: boolean;
  isAffine: boolean;
  affineA: number;
  affineB: number;
  affineC: number;
  affineD: number;
  isSharpen: boolean;
  sharpenSigma: number;
  sharpenM1: number;
  sharpenM2: number;
  sharpenX1: number;
  sharpenY2: number;
  sharpenY3: number;
  isMedian: boolean;
  medianSize: number;
  isBlur: boolean;
  blurSigma: number;
  isFlatten: boolean;
  flattenBg: string;
  isUnflatten: boolean;
  isGamma: boolean;
  gammaVal: number;
  gammaOut: number;
  isNegate: boolean;
  negateAlpha: boolean;
  isNormalize: boolean;
  normalizeLower: number;
  normalizeUpper: number;
  isClahe: boolean;
  claheWidth: number;
  claheHeight: number;
  claheMaxSlope: number;
  isConvolve: boolean;
  isThreshold: boolean;
  thresholdVal: number;
  thresholdGreyscale: boolean;
  thresholdGrayscale: boolean;
  isModulate: boolean;
  modulateBrightness: number;
  modulateSaturation: number;
  modulateHue: number;
  modulateLightness: number;
  isTint: boolean;
  tintColor: string;
  isGreyscale: boolean;
  isColourSpace: boolean;
  colourSpace: ColourScapes;
  isRemoveAlpha: boolean;
  isEnsureAlpha: boolean;
  ensureAlphaVal: number;
  extractChannel: ChannelTypes;
}
