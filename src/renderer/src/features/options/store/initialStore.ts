import {
  AFFINE_INITIAL_AVAL,
  AFFINE_INITIAL_BVAL,
  AFFINE_INITIAL_CVAL,
  AFFINE_INITIAL_DVAL,
  BLUR_SIGMA_MIN_VALUE,
  GAMMA_DEFAULT_VALUE,
  GAMMA_OUT_DEFAULT_VALUE,
  MEDIAN_DEFAULT_VAL,
  SHARPEN_M1_DEFAULT,
  SHARPEN_M2_DEFAULT,
  SHARPEN_SIGMA_MIN_VALUE,
  SHARPEN_X1_DEFAULT,
  SHARPEN_Y2_DEFAULT,
  SHARPEN_Y3_DEFAULT,
  THRESHOLD_DEFAULT_VAL,
  TRANSPARENT_COLOR,
} from '@shared/constants/options.constants';
import { ColourScapes } from '@shared/types/formatTypes/coloursSpace.type';
import { IOptions } from '@shared/types/options.type';

export const initialOptionsState: IOptions = {
  isExtend: false,
  leftExtend: 0,
  rightExtend: 0,
  topExtend: 0,
  bottomExtend: 0,
  isExtendColor: false,
  extendColor: TRANSPARENT_COLOR,
  isExtract: false,
  leftExtract: 0,
  topExtract: 0,
  widthExtract: 0,
  heightExtract: 0,
  rotate: 0,
  rotateBg: TRANSPARENT_COLOR,
  isFlip: false,
  isFlop: false,
  isAffine: false,
  affineA: AFFINE_INITIAL_AVAL,
  affineB: AFFINE_INITIAL_BVAL,
  affineC: AFFINE_INITIAL_CVAL,
  affineD: AFFINE_INITIAL_DVAL,
  isSharpen: false,
  sharpenSigma: SHARPEN_SIGMA_MIN_VALUE,
  sharpenM1: SHARPEN_M1_DEFAULT,
  sharpenM2: SHARPEN_M2_DEFAULT,
  sharpenX1: SHARPEN_X1_DEFAULT,
  sharpenY2: SHARPEN_Y2_DEFAULT,
  sharpenY3: SHARPEN_Y3_DEFAULT,
  isMedian: false,
  medianSize: MEDIAN_DEFAULT_VAL,
  isBlur: false,
  blurSigma: BLUR_SIGMA_MIN_VALUE,
  isFlatten: false,
  flattenBg: TRANSPARENT_COLOR,
  isUnflatten: false,
  isGamma: false,
  gammaVal: GAMMA_DEFAULT_VALUE,
  gammaOut: GAMMA_OUT_DEFAULT_VALUE,
  isNegate: false,
  negateAlpha: false,
  isNormalize: false,
  normalizeLower: 1,
  normalizeUpper: 99,
  isClahe: false,
  claheWidth: 0,
  claheHeight: 0,
  claheMaxSlope: 3,
  isConvolve: false,
  isThreshold: false,
  thresholdVal: THRESHOLD_DEFAULT_VAL,
  thresholdGreyscale: true,
  thresholdGrayscale: true,
  isModulate: false,
  modulateBrightness: 0,
  modulateSaturation: 0,
  modulateHue: 0,
  modulateLightness: 0,
  isTint: false,
  tintColor: TRANSPARENT_COLOR,
  isGreyscale: false,
  isColourSpace: false,
  colourSpace: ColourScapes.SRGB,
};
